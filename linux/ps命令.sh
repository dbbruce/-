1、查询进程启动时间和运行时长
ps -o pid,comm,lstart,etime -p 8981
 参数说明：
 pid：进程ID
 tty：终端
 user：用户
 comm：进程名
 lstart：开始时间
 etime：运行时间

2、ps aux
1. 运行(正在运行或在运行队列中等待)
2. 中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)
3. 不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)
4. 僵死(进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)
5. 停止(进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行)
参数：
1）ps a 显示现行终端机下的所有程序，包括其他用户的程序。
2）ps -A   显示所有程序。
3）ps c    列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。
4）ps -e  此参数的效果和指定"A"参数相同。
5）ps e   列出程序时，显示每个程序所使用的环境变量。
6）ps f    用ASCII字符显示树状结构，表达程序间的相互关系。
7）ps -H    显示树状结构，表示程序间的相互关系。
8）ps -N   显示所有的程序，除了执行ps指令终端机下的程序之外。
9）ps s     采用程序信号的格式显示程序状况。
10）ps S     列出程序时，包括已中断的子程序资料。
11）ps -t <终端机编号> 　指定终端机编号，并列出属于该终端机的程序的状况。
12）ps u 　 以用户为主的格式来显示程序状况。
13）ps x 　 显示所有程序，不以终端机来区分。
14）ps -l     較長,較詳細的顯示該PID的信息

root@v-ops-04 ~ # ps -aux |head
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root         1  0.0  0.0  51940  3376 ?        Ss    2020  27:43 /usr/lib/systemd/systemd --switched-root --system --deserialize 21
root         2  0.0  0.0      0     0 ?        S     2020   0:01 [kthreadd]
root         3  0.0  0.0      0     0 ?        S     2020   8:53 [ksoftirqd/0]
root         5  0.0  0.0      0     0 ?        S<    2020   0:00 [kworker/0:0H]
root         7  0.0  0.0      0     0 ?        S     2020   2:32 [migration/0]
root         8  0.0  0.0      0     0 ?        S     2020   0:00 [rcu_bh]
root         9  0.0  0.0      0     0 ?        S     2020 358:02 [rcu_sched]
root        10  0.0  0.0      0     0 ?        S     2020   1:25 [watchdog/0]
root        11  0.0  0.0      0     0 ?        S     2020   1:10 [watchdog/1]
参数解释
USER 进程的属主；
PID   进程的ID；
PPID    父进程；
%CPU   进程占用的CPU百分比；
%MEM  占用内存的百分比；
NI     进程的NICE值，数值大，表示较少占用CPU时间；
VSZ     該进程使用的虚拟內存量（KB）；
RSS     該進程占用的固定內存量（KB）（驻留中页的数量）；
TTY     該進程在那個終端上運行（登陸者的終端位置），若與終端無關，則顯示（？）。若為pts/0等，則表示由網絡連接主機進程
WCHAN  當前進程是否正在進行，若為-表示正在進行；
START   該進程被觸發启动时间；
TIME      該进程實際使用CPU運行的时间；
COMMAND   命令的名称和参数；

STAT狀態位常見的狀態字符
D 无法中断的休眠状态（通常 IO 的进程）；
R 正在运行可中在队列中可过行的；
S 处于休眠状态；
T 停止或被追踪；
W 进入内存交换  （从内核2.6开始无效）；
X 死掉的进程   （基本很少見）；
Z 僵尸进程；
< 优先级高的进程
N 优先级较低的进程
L 有些页被锁进内存；
s 进程的领导者（在它之下有子进程）；
l 多进程的（使用 CLONE_THREAD, 类似 NPTL pthreads）；
+ 位于后台的进程组